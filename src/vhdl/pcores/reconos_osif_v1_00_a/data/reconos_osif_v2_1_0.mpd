

BEGIN reconos_osif

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION IP_GROUP = ReconOS
OPTION DESC = ReconOS - OSIF Bus attachment
OPTION LONG_DESC = A AXI slave which maps the FIFOs of the HWTs to registers accessible from the AXI-Bus.
#OPTION ARCH_SUPPORT_MAP = (others=DEVELOPMENT)

## Bus Interfaces
BUS_INTERFACE BUS = S_AXI, BUS_STD = AXI, BUS_TYPE = SLAVE
BUS_INTERFACE BUS = OSIF_Hw2Sw_0_In, BUS_STD = FIFO_S, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = OSIF_Sw2Hw_0_In, BUS_STD = FIFO_M, BUS_TYPE = INITIATOR



## Generics for VHDL or Parameters for Verilog
PARAMETER C_NUM_HWTS = 1, DT = INTEGER

PARAMETER C_OSIF_DATA_WIDTH = 32, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_OSIF_LENGTH_WIDTH = 24, DT = INTEGER, ASSIGNMENT = CONSTANT
PARAMETER C_OSIF_OP_WIDTH = 8, DT = INTEGER, ASSIGNMENT = CONSTANT

PARAMETER C_S_AXI_ADDR_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXI_DATA_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector, MIN_SIZE = 0x100, PAIR = C_HIGHADDR, ADDRESS = BASE, BUS = S_AXI
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector, PAIR = C_BASEADDR, ADDRESS = HIGH, BUS = S_AXI
PARAMETER C_S_AXI_PROTOCOL = AXI4LITE, TYPE = NON_HDL, ASSIGNMENT = CONSTANT, DT = STRING, BUS = S_AXI

## Ports
PORT OSIF_Hw2Sw_0_In_Data = "FIFO_S_Data", DIR = I, VEC = [C_OSIF_DATA_WIDTH - 1 : 0], BUS = OSIF_Hw2Sw_0_In
PORT OSIF_Hw2Sw_0_In_Empty = "FIFO_S_Empty", DIR = I, BUS = OSIF_Hw2Sw_0_In
PORT OSIF_Hw2Sw_0_In_RE = "FIFO_S_RE", DIR = O, BUS = OSIF_Hw2Sw_0_In



PORT  OSIF_Sw2Hw_0_In_Data = "FIFO_M_Data", DIR = O, VEC = [C_OSIF_DATA_WIDTH - 1 : 0], BUS = OSIF_Sw2Hw_0_In
PORT  OSIF_Sw2Hw_0_In_Full = "FIFO_M_Full", DIR = I, BUS = OSIF_Sw2Hw_0_In
PORT  OSIF_Sw2Hw_0_In_WE = "FIFO_M_WE", DIR = O, BUS = OSIF_Sw2Hw_0_In



PORT S_AXI_ACLK = "", DIR = I, SIGIS = CLK, BUS = S_AXI
PORT S_AXI_ARESETN = ARESETN, DIR = I, SIGIS = RST, BUS = S_AXI
PORT S_AXI_AWADDR = AWADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_AWVALID = AWVALID, DIR = I, BUS = S_AXI
PORT S_AXI_WDATA = WDATA, DIR = I, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WSTRB = WSTRB, DIR = I, VEC = [((C_S_AXI_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WVALID = WVALID, DIR = I, BUS = S_AXI
PORT S_AXI_BREADY = BREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARADDR = ARADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_ARVALID = ARVALID, DIR = I, BUS = S_AXI
PORT S_AXI_RREADY = RREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARREADY = ARREADY, DIR = O, BUS = S_AXI
PORT S_AXI_RDATA = RDATA, DIR = O, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_RRESP = RRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_RVALID = RVALID, DIR = O, BUS = S_AXI
PORT S_AXI_WREADY = WREADY, DIR = O, BUS = S_AXI
PORT S_AXI_BRESP = BRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_BVALID = BVALID, DIR = O, BUS = S_AXI
PORT S_AXI_AWREADY = AWREADY, DIR = O, BUS = S_AXI

END
