-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.1
-- Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fe_mav is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    sampleFifo_V_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    sampleFifo_V_V_empty_n : IN STD_LOGIC;
    sampleFifo_V_V_read : OUT STD_LOGIC;
    featureFifo_V_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    featureFifo_V_V_full_n : IN STD_LOGIC;
    featureFifo_V_V_write : OUT STD_LOGIC;
    windowSize_V : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of fe_mav is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "fe_mav,hls_ip_2016_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.535000,HLS_SYN_LAT=152,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=59,HLS_SYN_LUT=215}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_96 : STD_LOGIC_VECTOR (7 downto 0) := "10010110";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";

    signal sampleFifo_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_27 : BOOLEAN;
    signal exitcond_fu_97_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal featureFifo_V_V_blk_n : STD_LOGIC;
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_41 : BOOLEAN;
    signal cntSamples_V_fu_103_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_51 : BOOLEAN;
    signal mavChannel1_V_fu_139_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mavChannel2_V_fu_181_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_V_2_reg_63 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_67 : BOOLEAN;
    signal tmp_V_3_reg_74 : STD_LOGIC_VECTOR (23 downto 0);
    signal t_V_reg_86 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_fu_187_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_V_1_fu_192_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_109_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_113_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_121_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal storemerge_fu_127_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_6_cast_fu_135_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_1_fu_145_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_155_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_163_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal storemerge1_fu_169_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_cast_fu_177_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    t_V_reg_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
                t_V_reg_86 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond_fu_97_p2 = ap_const_lv1_0) and not(ap_sig_51))) then 
                t_V_reg_86 <= cntSamples_V_fu_103_p2;
            end if; 
        end if;
    end process;

    tmp_V_2_reg_63_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
                tmp_V_2_reg_63 <= ap_const_lv24_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond_fu_97_p2 = ap_const_lv1_0) and not(ap_sig_51))) then 
                tmp_V_2_reg_63 <= mavChannel1_V_fu_139_p2;
            end if; 
        end if;
    end process;

    tmp_V_3_reg_74_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
                tmp_V_3_reg_74 <= ap_const_lv24_0;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond_fu_97_p2 = ap_const_lv1_0) and not(ap_sig_51))) then 
                tmp_V_3_reg_74 <= mavChannel2_V_fu_181_p2;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (featureFifo_V_V_full_n, ap_CS_fsm, exitcond_fu_97_p2, ap_sig_51)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when ap_ST_st2_fsm_1 => 
                if (((exitcond_fu_97_p2 = ap_const_lv1_0) and not(ap_sig_51))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                elsif ((not((exitcond_fu_97_p2 = ap_const_lv1_0)) and not(ap_sig_51))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                if (not((featureFifo_V_V_full_n = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    ap_sig_27_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_27 <= (ap_CS_fsm(1 downto 1) = ap_const_lv1_1);
    end process;


    ap_sig_41_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_41 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    ap_sig_51_assign_proc : process(sampleFifo_V_V_empty_n, featureFifo_V_V_full_n, exitcond_fu_97_p2)
    begin
                ap_sig_51 <= (((exitcond_fu_97_p2 = ap_const_lv1_0) and (sampleFifo_V_V_empty_n = ap_const_logic_0)) or (not((exitcond_fu_97_p2 = ap_const_lv1_0)) and (featureFifo_V_V_full_n = ap_const_logic_0)));
    end process;


    ap_sig_67_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_67 <= (ap_const_lv1_1 = ap_CS_fsm(0 downto 0));
    end process;


    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_67)
    begin
        if (ap_sig_67) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_27)
    begin
        if (ap_sig_27) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_41)
    begin
        if (ap_sig_41) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;

    cntSamples_V_fu_103_p2 <= std_logic_vector(unsigned(t_V_reg_86) + unsigned(ap_const_lv8_1));
    exitcond_fu_97_p2 <= "1" when (t_V_reg_86 = ap_const_lv8_96) else "0";

    featureFifo_V_V_blk_n_assign_proc : process(featureFifo_V_V_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond_fu_97_p2, ap_sig_cseq_ST_st3_fsm_2)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond_fu_97_p2 = ap_const_lv1_0))) or (ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2))) then 
            featureFifo_V_V_blk_n <= featureFifo_V_V_full_n;
        else 
            featureFifo_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    featureFifo_V_V_din_assign_proc : process(featureFifo_V_V_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond_fu_97_p2, ap_sig_cseq_ST_st3_fsm_2, ap_sig_51, tmp_V_fu_187_p1, tmp_V_1_fu_192_p1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((featureFifo_V_V_full_n = ap_const_logic_0)))) then 
            featureFifo_V_V_din <= tmp_V_1_fu_192_p1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond_fu_97_p2 = ap_const_lv1_0)) and not(ap_sig_51))) then 
            featureFifo_V_V_din <= tmp_V_fu_187_p1;
        else 
            featureFifo_V_V_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    featureFifo_V_V_write_assign_proc : process(featureFifo_V_V_full_n, ap_sig_cseq_ST_st2_fsm_1, exitcond_fu_97_p2, ap_sig_cseq_ST_st3_fsm_2, ap_sig_51)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((exitcond_fu_97_p2 = ap_const_lv1_0)) and not(ap_sig_51)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((featureFifo_V_V_full_n = ap_const_logic_0))))) then 
            featureFifo_V_V_write <= ap_const_logic_1;
        else 
            featureFifo_V_V_write <= ap_const_logic_0;
        end if; 
    end process;

    mavChannel1_V_fu_139_p2 <= std_logic_vector(unsigned(tmp_V_2_reg_63) + unsigned(tmp_6_cast_fu_135_p1));
    mavChannel2_V_fu_181_p2 <= std_logic_vector(unsigned(tmp_V_3_reg_74) + unsigned(tmp_1_cast_fu_177_p1));
    p_Result_1_fu_145_p4 <= sampleFifo_V_V_dout(31 downto 16);

    sampleFifo_V_V_blk_n_assign_proc : process(sampleFifo_V_V_empty_n, ap_sig_cseq_ST_st2_fsm_1, exitcond_fu_97_p2)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond_fu_97_p2 = ap_const_lv1_0))) then 
            sampleFifo_V_V_blk_n <= sampleFifo_V_V_empty_n;
        else 
            sampleFifo_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    sampleFifo_V_V_read_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1, exitcond_fu_97_p2, ap_sig_51)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (exitcond_fu_97_p2 = ap_const_lv1_0) and not(ap_sig_51))) then 
            sampleFifo_V_V_read <= ap_const_logic_1;
        else 
            sampleFifo_V_V_read <= ap_const_logic_0;
        end if; 
    end process;

    storemerge1_fu_169_p3 <= 
        tmp_s_fu_163_p2 when (tmp_2_fu_155_p3(0) = '1') else 
        p_Result_1_fu_145_p4;
    storemerge_fu_127_p3 <= 
        tmp_5_fu_121_p2 when (tmp_1_fu_113_p3(0) = '1') else 
        tmp_fu_109_p1;
        tmp_1_cast_fu_177_p1 <= std_logic_vector(resize(signed(storemerge1_fu_169_p3),24));

    tmp_1_fu_113_p3 <= sampleFifo_V_V_dout(15 downto 15);
    tmp_2_fu_155_p3 <= sampleFifo_V_V_dout(31 downto 31);
    tmp_5_fu_121_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(tmp_fu_109_p1));
        tmp_6_cast_fu_135_p1 <= std_logic_vector(resize(signed(storemerge_fu_127_p3),24));

        tmp_V_1_fu_192_p1 <= std_logic_vector(resize(signed(tmp_V_3_reg_74),32));

        tmp_V_fu_187_p1 <= std_logic_vector(resize(signed(tmp_V_2_reg_63),32));

    tmp_fu_109_p1 <= sampleFifo_V_V_dout(16 - 1 downto 0);
    tmp_s_fu_163_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(p_Result_1_fu_145_p4));
end behav;
